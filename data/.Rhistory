setwd("C:/Users/agarw/OneDrive/Desktop/NU_Notes/MSIA_490/SNAP/msia-490-snap-project/data")
load("snap_file.RData")
par(mar = c(0, 0, 0, 0))
plot(connections, vertex.col = "contact.color")
library('igraph')
par(mar = c(0, 0, 0, 0))
connections_igraph <- asIgraph(connections)
library('intergraph')
par(mar = c(0, 0, 0, 0))
connections_igraph <- asIgraph(connections)
connections_igraph
V(connections_igraph)$color <- cCodes # Have to give valid R color names
connections_igraph %>%
plot(.,
layout = layout_with_fr(.), ## Fruchterman-Reingold layout
edge.arrow.size = .4, ## arrow size
vertex.size = 5, ## node size
vertex.label = NA,
vertex.label.cex = .4, ## node label size
vertex.label.color = 'black') ## node label color
comp <- components(connections_igraph)
comp
giantGraph <- connections_igraph %>%
induced.subgraph(., which(comp$membership == which.max(comp$csize)))
V(giantGraph)$color <- cCodes # Have to give valid R color names
vcount(giantGraph) ## the number of nodes/actors/users
ecount(giantGraph) ## the number of edges
par(mar = c(0, 0, 0, 0))
giantGraph %>%
plot(.,
layout = layout_with_kk(.), ## Davidson and Harel graph layout
edge.arrow.size = .4,
vertex.size = 6,
vertex.label = NA,
vertex.label.cex = .5,
vertex.label.color = 'black')
#<<<<<<< Updated upstream
sna_g <- igraph::get.adjacency(connections_igraph, sparse=FALSE) %>% network::as.network.matrix()
detach('package:igraph')
library(statnet)
degree(sna_g, cmode = 'indegree')
centralities <- data.frame('node_name' = as.character(network.vertex.names(sna_g)),
'in_degree' = degree(sna_g, cmode = 'indegree'))
centralities$out_degree <- degree(sna_g, cmode = 'outdegree')
centralities$betweenness <- betweenness(sna_g)
centralities$incloseness <- igraph::closeness(connections_igraph, mode = 'in')
centralities$outcloseness <- igraph::closeness(connections_igraph, mode = 'out')
centralities$eigen <- evcent(sna_g)
centralities$netconstraint <- igraph::constraint(connections_igraph)
centralities$authority <- igraph::authority_score(connections_igraph, scale = TRUE)$`vector`
centralities$hub <- igraph::hub_score(connections_igraph, scale = TRUE)$`vector`
View(centralities)
